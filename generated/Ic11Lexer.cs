//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Ic11.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class Ic11Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, PINID=14, WHILE=15, IF=16, ELSE=17, 
		YIELD=18, RETURN=19, CONTINUE=20, BREAK=21, BASE_DEVICE=22, VAR=23, CONST=24, 
		ADD=25, SUB=26, MUL=27, DIV=28, MOD=29, BITWISE_NOT=30, SHIFTL=31, SHIFTR=32, 
		LT=33, GT=34, LE=35, GE=36, AND=37, OR=38, XOR=39, EQ=40, NE=41, NEGATION=42, 
		PINS=43, SLOTS=44, REAGENTS=45, STACK=46, DEVICE_WITH_ID=47, BATCH=48, 
		DIRECT_UNARY_OPERATOR=49, DIRECT_BINARY_OPERATOR=50, BOOLEAN=51, IDENTIFIER=52, 
		INTEGER=53, REAL=54, WS=55, LINE_COMMENT=56, MULTILINE_COMMENT=57;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "PINID", "WHILE", "IF", "ELSE", "YIELD", 
		"RETURN", "CONTINUE", "BREAK", "BASE_DEVICE", "VAR", "CONST", "ADD", "SUB", 
		"MUL", "DIV", "MOD", "BITWISE_NOT", "SHIFTL", "SHIFTR", "LT", "GT", "LE", 
		"GE", "AND", "OR", "XOR", "EQ", "NE", "NEGATION", "PINS", "SLOTS", "REAGENTS", 
		"STACK", "DEVICE_WITH_ID", "BATCH", "DIRECT_UNARY_OPERATOR", "DIRECT_BINARY_OPERATOR", 
		"BOOLEAN", "IDENTIFIER", "INTEGER", "REAL", "WS", "LINE_COMMENT", "MULTILINE_COMMENT"
	};


	public Ic11Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Ic11Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'pin'", "'void'", "'real'", "'('", "','", "')'", "'{'", 
		"'}'", "'.'", "'='", "'['", "']'", null, "'while'", "'if'", "'else'", 
		"'yield'", "'return'", "'continue'", "'break'", "'Base'", "'var'", "'const'", 
		"'+'", "'-'", "'*'", "'/'", "'%'", "'~'", "'<<'", "'>>'", "'<'", "'>'", 
		"'<='", "'>='", "'&'", "'|'", "'^'", "'=='", "'!='", "'!'", "'Pins'", 
		"'Slots'", "'Reagents'", "'Stack'", "'DeviceWithId'", "'Batch'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "PINID", "WHILE", "IF", "ELSE", "YIELD", "RETURN", "CONTINUE", 
		"BREAK", "BASE_DEVICE", "VAR", "CONST", "ADD", "SUB", "MUL", "DIV", "MOD", 
		"BITWISE_NOT", "SHIFTL", "SHIFTR", "LT", "GT", "LE", "GE", "AND", "OR", 
		"XOR", "EQ", "NE", "NEGATION", "PINS", "SLOTS", "REAGENTS", "STACK", "DEVICE_WITH_ID", 
		"BATCH", "DIRECT_UNARY_OPERATOR", "DIRECT_BINARY_OPERATOR", "BOOLEAN", 
		"IDENTIFIER", "INTEGER", "REAL", "WS", "LINE_COMMENT", "MULTILINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Ic11.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static Ic11Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,57,551,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,
		4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,
		1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
		1,13,3,13,164,8,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,16,1,
		16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,
		18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,
		20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,23,1,
		23,1,23,1,23,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,
		28,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,
		34,1,34,1,35,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,39,1,
		40,1,40,1,40,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,
		43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,
		45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,
		46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,
		48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,
		48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,
		48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,
		48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,
		48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,
		48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,
		48,1,48,1,48,1,48,1,48,1,48,1,48,3,48,407,8,48,1,49,1,49,1,49,1,49,1,49,
		1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
		1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
		1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
		1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
		1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,3,49,482,8,
		49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,3,50,493,8,50,1,51,1,51,
		5,51,497,8,51,10,51,12,51,500,9,51,1,52,4,52,503,8,52,11,52,12,52,504,
		1,53,5,53,508,8,53,10,53,12,53,511,9,53,1,53,1,53,4,53,515,8,53,11,53,
		12,53,516,1,54,4,54,520,8,54,11,54,12,54,521,1,54,1,54,1,55,1,55,1,55,
		1,55,5,55,530,8,55,10,55,12,55,533,9,55,1,55,1,55,1,56,1,56,1,56,1,56,
		1,56,5,56,542,8,56,10,56,12,56,545,9,56,1,56,1,56,1,56,1,56,1,56,1,543,
		0,57,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
		14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,
		26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,
		38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,
		50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,1,0,5,3,0,65,90,95,
		95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,3,0,9,10,13,13,32,32,
		2,0,10,10,13,13,612,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
		9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,
		0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,
		31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,
		0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,
		0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,
		1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,
		0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,
		1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,
		0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,
		0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,1,115,1,0,0,0,
		3,117,1,0,0,0,5,121,1,0,0,0,7,126,1,0,0,0,9,131,1,0,0,0,11,133,1,0,0,0,
		13,135,1,0,0,0,15,137,1,0,0,0,17,139,1,0,0,0,19,141,1,0,0,0,21,143,1,0,
		0,0,23,145,1,0,0,0,25,147,1,0,0,0,27,163,1,0,0,0,29,165,1,0,0,0,31,171,
		1,0,0,0,33,174,1,0,0,0,35,179,1,0,0,0,37,185,1,0,0,0,39,192,1,0,0,0,41,
		201,1,0,0,0,43,207,1,0,0,0,45,212,1,0,0,0,47,216,1,0,0,0,49,222,1,0,0,
		0,51,224,1,0,0,0,53,226,1,0,0,0,55,228,1,0,0,0,57,230,1,0,0,0,59,232,1,
		0,0,0,61,234,1,0,0,0,63,237,1,0,0,0,65,240,1,0,0,0,67,242,1,0,0,0,69,244,
		1,0,0,0,71,247,1,0,0,0,73,250,1,0,0,0,75,252,1,0,0,0,77,254,1,0,0,0,79,
		256,1,0,0,0,81,259,1,0,0,0,83,262,1,0,0,0,85,264,1,0,0,0,87,269,1,0,0,
		0,89,275,1,0,0,0,91,284,1,0,0,0,93,290,1,0,0,0,95,303,1,0,0,0,97,406,1,
		0,0,0,99,481,1,0,0,0,101,492,1,0,0,0,103,494,1,0,0,0,105,502,1,0,0,0,107,
		509,1,0,0,0,109,519,1,0,0,0,111,525,1,0,0,0,113,536,1,0,0,0,115,116,5,
		59,0,0,116,2,1,0,0,0,117,118,5,112,0,0,118,119,5,105,0,0,119,120,5,110,
		0,0,120,4,1,0,0,0,121,122,5,118,0,0,122,123,5,111,0,0,123,124,5,105,0,
		0,124,125,5,100,0,0,125,6,1,0,0,0,126,127,5,114,0,0,127,128,5,101,0,0,
		128,129,5,97,0,0,129,130,5,108,0,0,130,8,1,0,0,0,131,132,5,40,0,0,132,
		10,1,0,0,0,133,134,5,44,0,0,134,12,1,0,0,0,135,136,5,41,0,0,136,14,1,0,
		0,0,137,138,5,123,0,0,138,16,1,0,0,0,139,140,5,125,0,0,140,18,1,0,0,0,
		141,142,5,46,0,0,142,20,1,0,0,0,143,144,5,61,0,0,144,22,1,0,0,0,145,146,
		5,91,0,0,146,24,1,0,0,0,147,148,5,93,0,0,148,26,1,0,0,0,149,150,5,100,
		0,0,150,164,5,98,0,0,151,152,5,100,0,0,152,164,5,48,0,0,153,154,5,100,
		0,0,154,164,5,49,0,0,155,156,5,100,0,0,156,164,5,50,0,0,157,158,5,100,
		0,0,158,164,5,51,0,0,159,160,5,100,0,0,160,164,5,52,0,0,161,162,5,100,
		0,0,162,164,5,53,0,0,163,149,1,0,0,0,163,151,1,0,0,0,163,153,1,0,0,0,163,
		155,1,0,0,0,163,157,1,0,0,0,163,159,1,0,0,0,163,161,1,0,0,0,164,28,1,0,
		0,0,165,166,5,119,0,0,166,167,5,104,0,0,167,168,5,105,0,0,168,169,5,108,
		0,0,169,170,5,101,0,0,170,30,1,0,0,0,171,172,5,105,0,0,172,173,5,102,0,
		0,173,32,1,0,0,0,174,175,5,101,0,0,175,176,5,108,0,0,176,177,5,115,0,0,
		177,178,5,101,0,0,178,34,1,0,0,0,179,180,5,121,0,0,180,181,5,105,0,0,181,
		182,5,101,0,0,182,183,5,108,0,0,183,184,5,100,0,0,184,36,1,0,0,0,185,186,
		5,114,0,0,186,187,5,101,0,0,187,188,5,116,0,0,188,189,5,117,0,0,189,190,
		5,114,0,0,190,191,5,110,0,0,191,38,1,0,0,0,192,193,5,99,0,0,193,194,5,
		111,0,0,194,195,5,110,0,0,195,196,5,116,0,0,196,197,5,105,0,0,197,198,
		5,110,0,0,198,199,5,117,0,0,199,200,5,101,0,0,200,40,1,0,0,0,201,202,5,
		98,0,0,202,203,5,114,0,0,203,204,5,101,0,0,204,205,5,97,0,0,205,206,5,
		107,0,0,206,42,1,0,0,0,207,208,5,66,0,0,208,209,5,97,0,0,209,210,5,115,
		0,0,210,211,5,101,0,0,211,44,1,0,0,0,212,213,5,118,0,0,213,214,5,97,0,
		0,214,215,5,114,0,0,215,46,1,0,0,0,216,217,5,99,0,0,217,218,5,111,0,0,
		218,219,5,110,0,0,219,220,5,115,0,0,220,221,5,116,0,0,221,48,1,0,0,0,222,
		223,5,43,0,0,223,50,1,0,0,0,224,225,5,45,0,0,225,52,1,0,0,0,226,227,5,
		42,0,0,227,54,1,0,0,0,228,229,5,47,0,0,229,56,1,0,0,0,230,231,5,37,0,0,
		231,58,1,0,0,0,232,233,5,126,0,0,233,60,1,0,0,0,234,235,5,60,0,0,235,236,
		5,60,0,0,236,62,1,0,0,0,237,238,5,62,0,0,238,239,5,62,0,0,239,64,1,0,0,
		0,240,241,5,60,0,0,241,66,1,0,0,0,242,243,5,62,0,0,243,68,1,0,0,0,244,
		245,5,60,0,0,245,246,5,61,0,0,246,70,1,0,0,0,247,248,5,62,0,0,248,249,
		5,61,0,0,249,72,1,0,0,0,250,251,5,38,0,0,251,74,1,0,0,0,252,253,5,124,
		0,0,253,76,1,0,0,0,254,255,5,94,0,0,255,78,1,0,0,0,256,257,5,61,0,0,257,
		258,5,61,0,0,258,80,1,0,0,0,259,260,5,33,0,0,260,261,5,61,0,0,261,82,1,
		0,0,0,262,263,5,33,0,0,263,84,1,0,0,0,264,265,5,80,0,0,265,266,5,105,0,
		0,266,267,5,110,0,0,267,268,5,115,0,0,268,86,1,0,0,0,269,270,5,83,0,0,
		270,271,5,108,0,0,271,272,5,111,0,0,272,273,5,116,0,0,273,274,5,115,0,
		0,274,88,1,0,0,0,275,276,5,82,0,0,276,277,5,101,0,0,277,278,5,97,0,0,278,
		279,5,103,0,0,279,280,5,101,0,0,280,281,5,110,0,0,281,282,5,116,0,0,282,
		283,5,115,0,0,283,90,1,0,0,0,284,285,5,83,0,0,285,286,5,116,0,0,286,287,
		5,97,0,0,287,288,5,99,0,0,288,289,5,107,0,0,289,92,1,0,0,0,290,291,5,68,
		0,0,291,292,5,101,0,0,292,293,5,118,0,0,293,294,5,105,0,0,294,295,5,99,
		0,0,295,296,5,101,0,0,296,297,5,87,0,0,297,298,5,105,0,0,298,299,5,116,
		0,0,299,300,5,104,0,0,300,301,5,73,0,0,301,302,5,100,0,0,302,94,1,0,0,
		0,303,304,5,66,0,0,304,305,5,97,0,0,305,306,5,116,0,0,306,307,5,99,0,0,
		307,308,5,104,0,0,308,96,1,0,0,0,309,310,5,110,0,0,310,311,5,111,0,0,311,
		407,5,116,0,0,312,313,5,114,0,0,313,314,5,111,0,0,314,315,5,117,0,0,315,
		316,5,110,0,0,316,407,5,100,0,0,317,318,5,99,0,0,318,319,5,101,0,0,319,
		320,5,105,0,0,320,407,5,108,0,0,321,322,5,102,0,0,322,323,5,108,0,0,323,
		324,5,111,0,0,324,325,5,111,0,0,325,407,5,114,0,0,326,327,5,116,0,0,327,
		328,5,114,0,0,328,329,5,117,0,0,329,330,5,110,0,0,330,407,5,99,0,0,331,
		332,5,97,0,0,332,333,5,98,0,0,333,407,5,115,0,0,334,335,5,115,0,0,335,
		336,5,113,0,0,336,337,5,114,0,0,337,407,5,116,0,0,338,339,5,101,0,0,339,
		340,5,120,0,0,340,407,5,112,0,0,341,342,5,108,0,0,342,343,5,111,0,0,343,
		407,5,103,0,0,344,345,5,115,0,0,345,346,5,105,0,0,346,407,5,110,0,0,347,
		348,5,97,0,0,348,349,5,115,0,0,349,350,5,105,0,0,350,407,5,110,0,0,351,
		352,5,99,0,0,352,353,5,111,0,0,353,407,5,115,0,0,354,355,5,97,0,0,355,
		356,5,99,0,0,356,357,5,111,0,0,357,407,5,115,0,0,358,359,5,116,0,0,359,
		360,5,97,0,0,360,407,5,110,0,0,361,362,5,97,0,0,362,363,5,116,0,0,363,
		364,5,97,0,0,364,407,5,110,0,0,365,366,5,115,0,0,366,367,5,101,0,0,367,
		368,5,113,0,0,368,407,5,122,0,0,369,370,5,115,0,0,370,371,5,110,0,0,371,
		372,5,101,0,0,372,407,5,122,0,0,373,374,5,115,0,0,374,375,5,97,0,0,375,
		376,5,112,0,0,376,407,5,122,0,0,377,378,5,115,0,0,378,379,5,110,0,0,379,
		380,5,97,0,0,380,407,5,122,0,0,381,382,5,115,0,0,382,383,5,103,0,0,383,
		384,5,101,0,0,384,407,5,122,0,0,385,386,5,115,0,0,386,387,5,103,0,0,387,
		388,5,116,0,0,388,407,5,122,0,0,389,390,5,115,0,0,390,391,5,108,0,0,391,
		392,5,101,0,0,392,407,5,122,0,0,393,394,5,115,0,0,394,395,5,108,0,0,395,
		396,5,116,0,0,396,407,5,122,0,0,397,398,5,115,0,0,398,399,5,110,0,0,399,
		400,5,97,0,0,400,407,5,110,0,0,401,402,5,115,0,0,402,403,5,110,0,0,403,
		404,5,97,0,0,404,405,5,110,0,0,405,407,5,122,0,0,406,309,1,0,0,0,406,312,
		1,0,0,0,406,317,1,0,0,0,406,321,1,0,0,0,406,326,1,0,0,0,406,331,1,0,0,
		0,406,334,1,0,0,0,406,338,1,0,0,0,406,341,1,0,0,0,406,344,1,0,0,0,406,
		347,1,0,0,0,406,351,1,0,0,0,406,354,1,0,0,0,406,358,1,0,0,0,406,361,1,
		0,0,0,406,365,1,0,0,0,406,369,1,0,0,0,406,373,1,0,0,0,406,377,1,0,0,0,
		406,381,1,0,0,0,406,385,1,0,0,0,406,389,1,0,0,0,406,393,1,0,0,0,406,397,
		1,0,0,0,406,401,1,0,0,0,407,98,1,0,0,0,408,409,5,97,0,0,409,410,5,100,
		0,0,410,482,5,100,0,0,411,412,5,115,0,0,412,413,5,117,0,0,413,482,5,98,
		0,0,414,415,5,109,0,0,415,416,5,117,0,0,416,482,5,108,0,0,417,418,5,100,
		0,0,418,419,5,105,0,0,419,482,5,118,0,0,420,421,5,109,0,0,421,422,5,111,
		0,0,422,482,5,100,0,0,423,424,5,109,0,0,424,425,5,97,0,0,425,482,5,120,
		0,0,426,427,5,109,0,0,427,428,5,105,0,0,428,482,5,110,0,0,429,430,5,97,
		0,0,430,431,5,116,0,0,431,432,5,97,0,0,432,433,5,110,0,0,433,482,5,50,
		0,0,434,435,5,97,0,0,435,436,5,110,0,0,436,482,5,100,0,0,437,438,5,111,
		0,0,438,482,5,114,0,0,439,440,5,120,0,0,440,441,5,111,0,0,441,482,5,114,
		0,0,442,443,5,115,0,0,443,444,5,108,0,0,444,482,5,108,0,0,445,446,5,115,
		0,0,446,447,5,114,0,0,447,482,5,108,0,0,448,449,5,115,0,0,449,450,5,108,
		0,0,450,482,5,97,0,0,451,452,5,115,0,0,452,453,5,114,0,0,453,482,5,97,
		0,0,454,455,5,110,0,0,455,456,5,111,0,0,456,482,5,114,0,0,457,458,5,115,
		0,0,458,459,5,101,0,0,459,482,5,113,0,0,460,461,5,115,0,0,461,462,5,110,
		0,0,462,482,5,101,0,0,463,464,5,115,0,0,464,465,5,97,0,0,465,482,5,112,
		0,0,466,467,5,115,0,0,467,468,5,110,0,0,468,482,5,97,0,0,469,470,5,115,
		0,0,470,471,5,103,0,0,471,482,5,116,0,0,472,473,5,115,0,0,473,474,5,103,
		0,0,474,482,5,101,0,0,475,476,5,115,0,0,476,477,5,108,0,0,477,482,5,116,
		0,0,478,479,5,115,0,0,479,480,5,108,0,0,480,482,5,101,0,0,481,408,1,0,
		0,0,481,411,1,0,0,0,481,414,1,0,0,0,481,417,1,0,0,0,481,420,1,0,0,0,481,
		423,1,0,0,0,481,426,1,0,0,0,481,429,1,0,0,0,481,434,1,0,0,0,481,437,1,
		0,0,0,481,439,1,0,0,0,481,442,1,0,0,0,481,445,1,0,0,0,481,448,1,0,0,0,
		481,451,1,0,0,0,481,454,1,0,0,0,481,457,1,0,0,0,481,460,1,0,0,0,481,463,
		1,0,0,0,481,466,1,0,0,0,481,469,1,0,0,0,481,472,1,0,0,0,481,475,1,0,0,
		0,481,478,1,0,0,0,482,100,1,0,0,0,483,484,5,116,0,0,484,485,5,114,0,0,
		485,486,5,117,0,0,486,493,5,101,0,0,487,488,5,102,0,0,488,489,5,97,0,0,
		489,490,5,108,0,0,490,491,5,115,0,0,491,493,5,101,0,0,492,483,1,0,0,0,
		492,487,1,0,0,0,493,102,1,0,0,0,494,498,7,0,0,0,495,497,7,1,0,0,496,495,
		1,0,0,0,497,500,1,0,0,0,498,496,1,0,0,0,498,499,1,0,0,0,499,104,1,0,0,
		0,500,498,1,0,0,0,501,503,7,2,0,0,502,501,1,0,0,0,503,504,1,0,0,0,504,
		502,1,0,0,0,504,505,1,0,0,0,505,106,1,0,0,0,506,508,7,2,0,0,507,506,1,
		0,0,0,508,511,1,0,0,0,509,507,1,0,0,0,509,510,1,0,0,0,510,512,1,0,0,0,
		511,509,1,0,0,0,512,514,5,46,0,0,513,515,7,2,0,0,514,513,1,0,0,0,515,516,
		1,0,0,0,516,514,1,0,0,0,516,517,1,0,0,0,517,108,1,0,0,0,518,520,7,3,0,
		0,519,518,1,0,0,0,520,521,1,0,0,0,521,519,1,0,0,0,521,522,1,0,0,0,522,
		523,1,0,0,0,523,524,6,54,0,0,524,110,1,0,0,0,525,526,5,47,0,0,526,527,
		5,47,0,0,527,531,1,0,0,0,528,530,8,4,0,0,529,528,1,0,0,0,530,533,1,0,0,
		0,531,529,1,0,0,0,531,532,1,0,0,0,532,534,1,0,0,0,533,531,1,0,0,0,534,
		535,6,55,0,0,535,112,1,0,0,0,536,537,5,47,0,0,537,538,5,42,0,0,538,543,
		1,0,0,0,539,542,3,113,56,0,540,542,9,0,0,0,541,539,1,0,0,0,541,540,1,0,
		0,0,542,545,1,0,0,0,543,544,1,0,0,0,543,541,1,0,0,0,544,546,1,0,0,0,545,
		543,1,0,0,0,546,547,5,42,0,0,547,548,5,47,0,0,548,549,1,0,0,0,549,550,
		6,56,0,0,550,114,1,0,0,0,13,0,163,406,481,492,498,504,509,516,521,531,
		541,543,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
